<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>子非鱼</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-28T10:33:20.479Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>梦田</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/09/28/hello-world/"/>
    <id>http://yoursite.com/2017/09/28/hello-world/</id>
    <published>2017-09-28T10:33:20.479Z</published>
    <updated>2017-09-28T10:33:20.479Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2><span id="quick-start">Quick Start</span></h2><h3><span id="create-a-new-post">Create a new post</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3><span id="run-server">Run server</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3><span id="generate-static-files">Generate static files</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3><span id="deploy-to-remote-sites">Deploy to remote sites</span></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Chromium OS源码编译、烧录与使用笔记</title>
    <link href="http://yoursite.com/2017/03/28/Chromium-OS%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E3%80%81%E7%83%A7%E5%BD%95%E4%B8%8E%E4%BD%BF%E7%94%A8%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2017/03/28/Chromium-OS源码编译、烧录与使用笔记/</id>
    <published>2017-03-28T07:52:59.000Z</published>
    <updated>2017-09-28T10:33:20.479Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>以下记录Chromium OS 源码同步、编译、烧至U盘并使用的过程。</p></blockquote><h3><span id="基础知识">基础知识</span></h3><p>Chromium OS相关知识，看<a href="http://blog.csdn.net/Arthur_02_13/article/category/6671328" target="_blank" rel="external">这里</a>。</p><h3><span id="准备阶段">准备阶段</span></h3><h4><span id="最低配置">最低配置</span></h4><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">参数</th></tr></thead><tbody><tr><td style="text-align:center">CPU</td><td style="text-align:center">双核 2.0GHz</td></tr><tr><td style="text-align:center">内存</td><td style="text-align:center">8G</td></tr><tr><td style="text-align:center">宽带</td><td style="text-align:center">5Mbps</td></tr><tr><td style="text-align:center">空白硬盘分区</td><td style="text-align:center">50G</td></tr></tbody></table><blockquote><p><a href="http://detail.zol.com.cn/406/405139/param.shtml" target="_blank" rel="external">测试机型</a></p></blockquote><h4><span id="双系统">双系统</span></h4><p><a href="https://bluesmilery.github.io/blogs/1509af3a/" target="_blank" rel="external">Win7下硬盘安装Ubuntu-16.04 LTS</a></p><p>Q: 如何查看分区信息以确定<code>(hdx,x)</code>内参数？</p><p>A: 简单可选下载DiskGenius查看分区信息；极客可选<a href="https://jingyan.baidu.com/article/ce436649f26f4f3773afd324.html" target="_blank" rel="external">DOS下查看分区</a>。</p><p>Q: 安装Ubuntu提示无法卸载<code>/isolinux</code>之类信息？</p><p>A: <a href="http://blog.csdn.net/woxiaohahaa/article/details/53944407" target="_blank" rel="external">排错</a>。</p><h4><span id="科学上网">科学上网</span></h4><h5><span id="服务端">服务端</span></h5><p>服务器选择Ubuntu 16.04，源码编译<code>shadowsocks-libev</code>，官方教程看<a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="external">这里</a>，中文看<a href="https://heiybb.com/ubuntu-ss.hf" target="_blank" rel="external">这里</a>。</p><h5><span id="客户端">客户端</span></h5><p>全局代理设置看<a href="https://github.com/naseeihity/LearnReact/issues/7" target="_blank" rel="external">这里</a>。</p><p>Q: Shadowsocks-Qt5开机自启如何设置？</p><p>A: 看<a href="http://www.afox.cc/archives/83" target="_blank" rel="external">这里</a>。</p><h5><span id="创建google-api">创建Google API</span></h5><p><a href="http://www.chromium.org/developers/how-tos/api-keys" target="_blank" rel="external">官方教程</a></p><p>Q: 无权限修改 <code>/etc/chrome_dev.conf</code> ?</p><p>A: <code>root # mount -o remount,rw /</code> ，此方法同样适用登录激活时替换hosts。</p><h3><span id="源码编译chromium-os">源码编译Chromium OS</span></h3><h4><span id="获取chromium-os源码">获取Chromium OS源码</span></h4><p>安装依赖，之后配置<code>git</code></p><pre><code>sudo apt-get install git-core gitk git-gui curl</code></pre><p>配置如下：</p><pre><code>git config --global user.email &quot;you@example.com&quot;git config --global user.name &quot;Your Name&quot;</code></pre><p>接着，下载并配置<code>depot_tools</code></p><pre><code>proxychain4 git clone https://chromium.googlesource.com/chromium/tools/depot_tools.gitecho &quot;export PATH=`pwd`/depot_tools:&quot;$PATH&quot;&quot; &gt;&gt; ~/.bashrcecho &quot;umask 022&quot; &gt;&gt; ~/.bashrcecho &quot;export BOARD=x86-generic&quot; &gt;&gt; ~/.bashrcsource ~/.bashrc</code></pre><p>可通过执行<code>cros</code>、<code>repo</code>命令验证。</p><pre><code>proxychain4 repo init -u https://chromium.googlesource.com/chromiumos/manifest.git --repo-url https://chromium.googlesource.com/external/repo.gitproxychain4 repo sync</code></pre><p>记得在需要使用代理时在命令前<code>proxychain4</code>。<br>关于Git与Repo的基础知识可以看<a href="http://www.cnblogs.com/angeldevil/p/3238470.html" target="_blank" rel="external">这里</a>。</p><h4><span id="创建chroot">创建</span></h4><h5><span id="配置sudo">配置sudo</span></h5><p>如果不想每次启动新终端都重新输入密码，在配置文件中禁止tty_tickets即可，但此举使得所有进程都使用同一个sudo任务，具体参看<a href="https://wiki.archlinux.org/index.php/Sudo" target="_blank" rel="external">跨终端sudo</a>。</p><h5><span id="使用cros_sdk创建chroot">使用cros_sdk创建chroot</span></h5><p>Q: <code>ImportError: No module named pkg_resources</code></p><p>A: <code>sudo apt install python-pip</code></p><p>Q: <code>Failure: Server presented certificate that does not match host www.googleapis.com / ERROR:(Note bash sometimes misreports &quot;command not found&quot; as exit code 1 instead of 127)</code></p><p>A: hosts文件的问题，恢复原有<code>hosts</code>内容即可，具体参看<a href="https://bugs.chromium.org/p/chromium/issues/detail?id=465000" target="_blank" rel="external">这里</a>。</p><p>Note: 如需删除<code>Chroot</code>，请使用<code>cros_sdk --delete</code>正确删除它。</p><h4><span id="构建所有包">构建所有包</span></h4><p>首先，在<code>Chroot</code>内键入<code>export BOARD=x86-generic</code>，使用<code>./build_packages --board=${BOARD}</code>构建软件包，请耐心等待。</p><h4><span id="构建测试镜像">构建测试镜像</span></h4><p>若上述操作成功，使用以下命令构建测试类型镜像并关闭开机验证，这样即可自由修改root文件系统内容。如果构建的是test这种类型的镜像，当使用SSH登陆装载此镜像的虚拟机时，密码统一为test0000。</p><pre><code>./build_image --board=${BOARD} --noenable_rootfs_verification test</code></pre><h4><span id="将镜像转换为虚拟机镜像并运行">将镜像转换为虚拟机镜像并运行</span></h4><p>在Ubuntu上安装虚拟机。</p><pre><code>sudo apt-get install qemu-kvm</code></pre><p>然后在BIOS中启用本地虚拟化</p><pre><code>sudo kvm-ok</code></pre><p>出现下面信息表示本地虚拟机已开启。</p><pre><code>INFO: /dev/kvm existsKVM acceleration can be used</code></pre><p>虚拟机基础操作命名示例：</p><pre><code>1.启动虚拟机（带图形界面）$ ./bin/cros_start_vm --image_path=../build/images/${BOARD}/latest/chromiumos_qemu_image.bin2.启动虚拟机（不带图形界面）$ ./bin/cros_start_vm --no_graphics --image_path=../build/images/${BOARD}/latest/chromiumos_qemu_image.bin3.关闭虚拟机$ ./bin/cros_stop_vm --kvm_pid /tmp/kvm.1234.pid</code></pre><h4><span id="设置ssh访问测试镜像">设置SSH访问测试镜像</span></h4><p>从宿主机到虚拟机，SSH默认情况如下，密码为<code>test0000</code>，但可以自定义设置访问端口，test类型镜像下虚拟机密码貌似不能改。</p><pre><code>ssh root@localhost -p 9222 -o StrictHostKeyChecking=no</code></pre><p>VNC登陆信息为127.0.0.1:5900</p><h3><span id="自定义开机动画">自定义开机动画</span></h3><p>Chromium OS 开机动画实际上是由18张png图构成，只需替换即可，我们在<code>Chroot</code>下创建一个分支并在此分支下创建更改。</p><h4><span id="创建更改的新本地分支">创建更改的新本地分支</span></h4><pre><code>repo start change-assets .(cr) (change-assets) demo ~/trunk/src/scripts $</code></pre><p>其中，repo start 参数如下：</p><pre><code>repo start &lt;BRANCH_NAME&gt; [&lt;PROJECT_LIST&gt;]&lt;BRANCH_NAME&gt; 参数应该提供一个更改的简短说明给你正在尝试建立的项目。如果你不知道，那就考虑使用默认名称。&lt;PROJECT_LIST&gt; 指定将要参与这个主题分支的项目。注意：&quot;.&quot; 是指当前工作目录下的项目的简写。</code></pre><h4><span id="使用cros_workon修改包并替换图像">使用cros_workon修改包并替换图像</span></h4><h5><span id="找出ebuild映射目录">找出ebuild映射目录</span></h5><p><code>cros_workon</code> 工具可以帮助我们了解ebuild映射关系。可使用以下命令查看ebuild和目录的完整列表，确定之前已在Chroot里设置 <code>BOARD</code>：</p><pre><code>cros_workon info --board=${BOARD} --all</code></pre><p>如果想了解哪些ebuild使用特定目录中的源代码，可以使用grep查找它们。例如：</p><pre><code>cros_workon info --board = $ {BOARD} --all | grep chromeos-base/chromiumos-assets</code></pre><p>返回以下输出：</p><pre><code>chromeos-base/chromiumos-assets chromiumos/platform/chromiumos-assets src/platform/chromiumos-assets</code></pre><p>这将告诉您以下信息：</p><pre><code>ebuild的名称是： chromeos-base/chromiumos-assets服务器上git仓库的路径为： chromiumos/platform/chromiumos-assets您系统上源代码的路径是： src/platform/chromiumos-assets</code></pre><blockquote><p>注：</p><ol><li>关于 <code>ebuild</code> 的知识看<a href="http://www.voidcn.com/tag/ebuild" target="_blank" rel="external">这里</a></li><li>关于 <code>Gentoo</code> 的知识看<a href="http://www.voidcn.com/blog/aceking10/cata/1751275/list-1.html" target="_blank" rel="external">这里</a></li></ol></blockquote><h5><span id="替换-package_name-下图片">替换 <code>${PACKAGE_NAME}</code> 下图片</span></h5><p>在Chroot下键入 <code>cros_workon --board=${BOARD} start ${PACKAGE_NAME}</code> ，将 <code>${PACKAGE_NAME}</code> 替换成需要变更的软件包名称，我们这里改为 <code>chromeos-base/chromiumos-assets</code> 从chroot外部运行以下命令 <code>proxychain4 repo sync</code> 同步源码（这一步表示还不是很懂），之后在<code>Chroot</code>内下载引导动画图片并批量替换（名字、尺寸须一致）。</p><h4><span id="利用-cros-deploy-将修改的包部署到运行的虚拟机">利用 <code>cros deploy</code> 将修改的包部署到运行的虚拟机</span></h4><pre><code>cros deploy 127.0.0.1:9222 chromeos-base/chromiumos-assets</code></pre><blockquote><p>注：</p><ol><li><code>cros deploy</code> 设置要生效首先虚拟机得开启</li><li><code>cros deploy</code> 后需要重启虚拟机才能生效</li></ol></blockquote><h3><span id="烧录">烧录</span></h3><h4><span id="将bin烧至u盘">将.bin烧至U盘</span></h4><p>键入 <code>sudo fdisk -l</code> 查看插入U盘所在区域，然后使用 <code>cros flash usb:///dev/sdd ~/chromiumos/src/build/images/x86-generic/latest/chromiumos_test_image.bin</code> 烧录编译的系统到U盘</p><h4><span id="修改分区">修改分区</span></h4><p>如果要使用自定义大小容量的分区构建镜像，请考虑在 <code>build_library/legacy_disk_layout.json</code> 中添加新的磁盘布局或使用 <code>adjust_part</code>。请参阅下面的帮助，</p><pre><code>adjust_part =&apos;STATE：1G&apos; ---- 将1GB添加到状态分区adjust_part =&apos;ROOT-A：-1G&apos; ---- 从主rootfs分区中删除1GBadjust_part =&apos;STATE：= 1G&apos; --- 设置状态分区为1GB</code></pre><p>这里键入 <code>./build_image --board=${BOARD} --noenable_rootfs_verification test --adjust_part=&#39;STATE:+10G&#39;</code>，这样我们的Chromium OS用户空间便增加10G，如果使用默认设置你会发现用户空间容量不足（约140MB）。</p><h3><span id="后记">后记</span></h3><blockquote><p>通过U盘引导进入系统后在Chromebook上使用时，触摸板不能用，但在其他测试机上无问题;如果换机引导运行系统需要重新输入帐号、密码激活，但里面原有的个人文件不会丢失;编译前将可以联网激活的<code>hosts</code>文件放进去可以比较方便的实现激活；如果出现不能联无线网可用手机连接笔记本共享上网，不久后便能设置无线网连接。如果烧录<code>test</code>类型镜像<code>Crosh</code>下<code>root</code>密码为<code>test0000</code>，其它默认为<code>chronos</code>或编译时自己设置的密码，设置方法见<a href="https://www.chromium.org/chromium-os/developer-guide#TOC-Set-the-chronos-user-password" target="_blank" rel="external">这里</a>；以上内容已同步至<a href="https://github.com/tongxindao/ChromiumOS-Wiki/wiki" target="_blank" rel="external">Wiki</a>。</p></blockquote><ol><li><a href="https://bluesmilery.github.io/blogs/1509af3a/" target="_blank" rel="external">Linux系统安装——Ubuntu16.04+Windows7双系统</a></li><li><a href="https://github.com/shadowsocks/shadowsocks-libev" target="_blank" rel="external">shadowsocks-libev官方教程</a></li><li><a href="https://github.com/naseeihity/LearnReact/issues/7" target="_blank" rel="external">Ubuntu下实现全局翻墙的配置过程</a></li><li><a href="https://www.chromium.org/chromium-os/developer-guide" target="_blank" rel="external">Chroumium OS developer guide</a></li><li><a href="http://www.chromium.org/developers/how-tos/api-keys" target="_blank" rel="external">How to create Google API</a></li><li><a href="https://wiki.archlinux.org/index.php/Sudo" target="_blank" rel="external">跨终端sudo</a></li><li><a href="https://www.chromium.org/chromium-os/build/cros-deploy" target="_blank" rel="external">How to use cros deploy</a></li><li><a href="https://github.com/ds-hwang/wiki/wiki/Build-Chromium-for-Chromium-OS-and-Deploy-to-realdevice" target="_blank" rel="external">Build Chromium for Chromium OS and Deploy to realdevice</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;以下记录Chromium OS 源码同步、编译、烧至U盘并使用的过程。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;&lt;span id=&quot;基础知识&quot;&gt;基础知识&lt;/span&gt;&lt;/h3&gt;&lt;p&gt;Chromium OS相关知识，看&lt;a href=&quot;http:
      
    
    </summary>
    
    
      <category term="Chromium OS" scheme="http://yoursite.com/tags/Chromium-OS/"/>
    
      <category term="ebuild" scheme="http://yoursite.com/tags/ebuild/"/>
    
      <category term="Gentoo" scheme="http://yoursite.com/tags/Gentoo/"/>
    
      <category term="cros" scheme="http://yoursite.com/tags/cros/"/>
    
      <category term="repo" scheme="http://yoursite.com/tags/repo/"/>
    
  </entry>
  
  <entry>
    <title>通过Chrx在Chromebook上安装双“系统”（译）</title>
    <link href="http://yoursite.com/2016/10/24/%E9%80%9A%E8%BF%87Chrx%E5%9C%A8Chromebook%E4%B8%8A%E5%AE%89%E8%A3%85%E5%8F%8C%E2%80%9C%E7%B3%BB%E7%BB%9F%E2%80%9D%EF%BC%88%E8%AF%91%EF%BC%89/"/>
    <id>http://yoursite.com/2016/10/24/通过Chrx在Chromebook上安装双“系统”（译）/</id>
    <published>2016-10-24T14:51:32.000Z</published>
    <updated>2017-09-28T10:33:20.479Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本方法通过Linux的<a href="http://www.ibm.com/developerworks/cn/linux/l-cn-chroot/" target="_blank" rel="external">Chroot机制</a>实现在Chromebook中建立双系统目标。以下内容翻译自<a href="https://chrx.org/" target="_blank" rel="external">这里</a>，中间若有错误先行致歉并请指正，万分感谢。</p></blockquote><table><thead><tr><th style="text-align:center">平台</th><th style="text-align:center">支持多数Chromebook型号，具体见<a href="#chromebooks">chromebooks</a></th></tr></thead><tbody><tr><td style="text-align:center">安装</td><td style="text-align:center">Linux发行版本系列，具体见<a href="#operating-systems">操作系统</a>与<a href="#recommendations">建议</a></td></tr></tbody></table><blockquote><p>chrx<a href="https://chrx.org" target="_blank" rel="external">官网</a><br>源码<a href="https://github.com/reynhout/chrx" target="_blank" rel="external">在此</a></p></blockquote><h3><span id="进度">进度</span></h3><blockquote><p><strong>2.4版本</strong>增加对Fedora的支持，系统升级至Ubuntu 16.10；默认安装GalliumOS。更多见<a href="#changelog">更新日志</a>。</p></blockquote><h3><span id="用法">用法</span></h3><blockquote><p>通过<strong>chrx</strong>在一台全新的（或刚恢复出厂设置）的Chromebook上安装系统可分以下两个步骤：</p></blockquote><ul><li>首先，在您的固态硬盘上设置新系统的使用空间并重启；</li><li>接着，选择您需要安装的发型版本及相关用户选项设置。</li></ul><h3><span id="具体步骤">具体步骤</span></h3><blockquote><p>1.开启<a href="http://www.chromium.org/chromium-os/developer-information-for-chrome-os-devices" target="_blank" rel="external">开发者模式</a>（例如Acer C720，键入 <code>ESC+F3（刷新键）+电源键</code> ），然后重启；<br>2.加载ChromeOS时出现白色背景写有“OS verifaication is OFF（操作系统验证是关闭的）”字样时按下<code>CTRL+D</code>；<br>3.如允许，请配置您的无线网络；<br>4.键入 <code>CTRL+ALT+F2（按键上标有向右箭头的图案）</code> 键入虚拟终端（VT）；<br>5.键入 <code>chronos</code>（默认无密码）并回车进入 <code>chronos@localhost</code>  shell；<br>6.如需要，升级固件（对于Bay Trail模型要求，推荐Broadwell模式，可选的Haswell模型—更多见<a href="#chromebooks">Chromebooks</a>）；<br>7.运行chrx：键入 <code>curl –Os https://chrx.org/go &amp;&amp; sh go</code> （更多见<a href="#options">选项</a>）；<br>8.按照屏幕上的指示安装Chromebook；<br>9.重启，然后重复执行第2至第5步、第7步安装并配置完成您的新系统。</p></blockquote><p><strong>注意：</strong></p><blockquote><p>1.<em>登录新系统时用户名与密码一致。</em><br>2.<em>若安装ubuntu请选择LTS长期支持版。（不建议每半年更新一次linux系统）</em></p></blockquote><h3><span id="选项"><span id="options">选项</span></span></h3><blockquote><p>chrx可接受如下选项：<br><strong>格式：chrx [选项…]</strong></p></blockquote><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">全称</th><th style="text-align:center">详解</th></tr></thead><tbody><tr><td style="text-align:center">-d</td><td style="text-align:center">DISTRIBUTION-发行版本</td><td style="text-align:center">安装系统发型版本[默认galliumos]（galliumos, ubuntu, lubuntu, xubuntu, kubuntu, edubuntu, fedora）</td></tr><tr><td style="text-align:center">-e</td><td style="text-align:center">ENVIRONMEN-环境</td><td style="text-align:center">安装的环境[默认为desktop（桌面）]（desktop-桌面, minimal-极简, standard-标准, server-服务器）galliumos: desktop; ubuntu etc: desktop, minimal, standard, server, fedora: desktop, workstation, kde, xfce, lxde, mate,cinnamon, sugar</td></tr><tr><td style="text-align:center">-r</td><td style="text-align:center">RELEAS-版本号</td><td style="text-align:center">系统版本号或版本名[]（lts-长期支持版, latest-最新版, dev-开发版, 15.10, 16.04, wily, xenial, etc）galliumos: latest-最新版, 2.0, xenon, nightly; 类ubuntu : latest-最新版, lts-长期支持版, dev-开发版, 16.04.1, xenial, etc; fedora: latest-最新版, 23, 24, 25</td></tr><tr><td style="text-align:center">-a</td><td style="text-align:center">ARCH-结构</td><td style="text-align:center">处理器结构（i386,amd64）[默认amd64]</td></tr><tr><td style="text-align:center">-m</td><td style="text-align:center">MIRROR-镜像</td><td style="text-align:center">版本下载镜像选择 [${CHRX_OS_MIRROR}]; galliumos: ny1.us, va1.us, ca1.us, rb1.fr</td></tr><tr><td style="text-align:center">-t</td><td style="text-align:center">TARGETDISK-目标盘符</td><td style="text-align:center">目标盘符（/dev/mmcblk1，/dev/sdb，等）[]</td></tr><tr><td style="text-align:center">-p</td><td style="text-align:center">PACKAGE-软件包</td><td style="text-align:center">额外的软件包，一个或多个[]（chrome,kodi,minecraft,steam等）更多到 chrx.org (暂不支持fedora)</td></tr><tr><td style="text-align:center">-H</td><td style="text-align:center">HOSTNAME-主机名</td><td style="text-align:center">新系统主机名[chrx]</td></tr><tr><td style="text-align:center">-U</td><td style="text-align:center">USERNAME-用户名</td><td style="text-align:center">创建第一个用户名[chrx]</td></tr><tr><td style="text-align:center">-L</td><td style="text-align:center">LOCALE-区域设置</td><td style="text-align:center">新系统区域设置[en US.UTF-8]</td></tr><tr><td style="text-align:center">-Z</td><td style="text-align:center">TIMEZONE-时区设置</td><td style="text-align:center">新系统时区，[America/New_York]（America/San_Francisco, Europe/Amsterdam, Etc/UTC, 等）</td></tr><tr><td style="text-align:center">-n</td><td style="text-align:center"></td><td style="text-align:center">禁用成功/失败通知</td></tr><tr><td style="text-align:center">-s</td><td style="text-align:center"></td><td style="text-align:center">跳过所有定制，只安装普通的操作系统</td></tr><tr><td style="text-align:center">-y</td><td style="text-align:center"></td><td style="text-align:center">非交互方式运行，采取默认值和不确定</td></tr><tr><td style="text-align:center">-v</td><td style="text-align:center"></td><td style="text-align:center">增加详细输出</td></tr><tr><td style="text-align:center">-h</td><td style="text-align:center"></td><td style="text-align:center">显示帮助信息</td></tr></tbody></table><blockquote><p>默认值在中括号内显示，例如：[默认值]。<br>如果TARGETDISK没有键入，chrx将默认选择在内部固态硬盘安装系统。</p></blockquote><h3><span id="软件包">软件包</span></h3><blockquote><p>使用 <code>chrx -p 软件包名</code> ，chrx将在系统安装完毕后自动安装您所选的应用软件。<br>chrx通过以下别名安装Ubuntu软件仓库内软件：</p></blockquote><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">详解</th></tr></thead><tbody><tr><td style="text-align:center"><code>minecraft</code></td><td style="text-align:center">安装 <a href="https://minecraft.net/" target="_blank" rel="external">minecraft</a></td></tr><tr><td style="text-align:center"><code>steam</code></td><td style="text-align:center">安装 <a href="http://store.steampowered.com/about/" target="_blank" rel="external">steam</a></td></tr><tr><td style="text-align:center"><code>kodi</code></td><td style="text-align:center">安装 <a href="http://kodi.tv/about/" target="_blank" rel="external">Kodi Media Center</a></td></tr><tr><td style="text-align:center"><code>chrome</code></td><td style="text-align:center">安装 <a href="https://chrome.google.com" target="_blank" rel="external">Google Chrome</a></td></tr><tr><td style="text-align:center"><code>admin-misc</code></td><td style="text-align:center">是 <code>”ssh tmux rsync vim”</code> 的别名</td></tr><tr><td style="text-align:center"><code>dev-misc</code></td><td style="text-align:center">是 <code>“arduino geany geany-plugins ruby”</code> 的别名</td></tr></tbody></table><blockquote><p>通过chrx命令可安装多个软件，您可根据需要引用 <code>-p 软件名</code> 参数订制。例如：<code>-p &quot;gimp blender inkscape&quot;</code> 。</p></blockquote><h3><span id="示例">示例</span></h3><p><a href="https://galliumos.org/" target="_blank" rel="external">GalliumOS</a> Desktop (最新版)：</p><pre><code>curl -Os https://chrx.org/go &amp;&amp; sh go -v</code></pre><p><a href="https://galliumos.org/" target="_blank" rel="external">GalliumOS</a> Desktop (最新版)，安装额外软件包：</p><pre><code>curl -Os https://chrx.org/go &amp;&amp; sh go -p &quot;minecraft steam kodi&quot;</code></pre><p><a href="http://lubuntu.net/" target="_blank" rel="external">Lubuntu</a> Desktop (最新版)：</p><pre><code>curl -Os https://chrx.org/go &amp;&amp; sh go -d lubuntu</code></pre><p><a href="https://ubuntu.com/" target="_blank" rel="external">Ubuntu</a> 标准版，系统版本16.04，主机名hal，首个用户名dave，包括其它一些管理工具：</p><pre><code>curl -Os https://chrx.org/go &amp;&amp; sh go -d ubuntu -e standard -r 16.04 -H hal -U dave -p admin-misc</code></pre><h3><span id="高级玩法"><span id="advanced_usage">高级玩法</span></span></h3><blockquote><p>您可以选择托管或自己缓存这些安装文件。有很多很好的理由这样做，特别是如果你会做大量安装的。然而，设置可能较为复杂，说明此README的范围之内。<br>指向chrx在缓存，只需设置<code>CHRX_WEB_ROOT</code> 环境变量在运行前 <code>go</code> 脚本，就像这样：</p></blockquote><pre><code>export CHRX_WEB_ROOT=&quot;http://myserver/chrx&quot;curl -O $CHRX_WEB_ROOT/go &amp;&amp; sh go</code></pre><h3><span id="兼容性">兼容性</span></h3><p><span id="chromebooks"><strong>chromebooks</strong></span></p><table><thead><tr><th style="text-align:center">是否支持</th><th style="text-align:center">CPU 系列</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">✅</td><td style="text-align:center">Intel Haswell</td><td style="text-align:center"><a href="https://mrchromebox.tech/#fwscript" target="_blank" rel="external">固件升级</a> 推荐</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Intel Broadwell</td><td style="text-align:center"><a href="https://mrchromebox.tech/#fwscript" target="_blank" rel="external">固件升级</a> 推荐</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Intel Skylake</td><td style="text-align:center"><a href="https://mrchromebox.tech/#fwscript" target="_blank" rel="external">固件升级</a> 推荐</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Intel Bay Trail</td><td style="text-align:center"><a href="https://mrchromebox.tech/#fwscript" target="_blank" rel="external">固件升级</a> 需要</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Intel Braswell</td><td style="text-align:center"><a href="https://mrchromebox.tech/#fwscript" target="_blank" rel="external">固件升级</a> 需要</td></tr><tr><td style="text-align:center">❓</td><td style="text-align:center">Intel Sandy/Ivy Bridge</td><td style="text-align:center">需要 SeaBIOS with Legacy Boot 兼容性</td></tr><tr><td style="text-align:center">❓</td><td style="text-align:center">Intel Pineview</td><td style="text-align:center">需要 SeaBIOS with Legacy Boot 兼容性</td></tr><tr><td style="text-align:center">❌</td><td style="text-align:center">ARM</td><td style="text-align:center">不支持ARM</td></tr></tbody></table><blockquote><p>如果您不知道您设备的CPU，请看<a href="https://wiki.galliumos.org/Hardware_Compatibility" target="_blank" rel="external">这里</a>。</p></blockquote><h3><span id="操作系统"><span id="operating-systems">操作系统</span></span></h3><table><thead><tr><th style="text-align:center">是否支持</th><th style="text-align:center">操作系统</th><th style="text-align:center">发行版本</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">✅</td><td style="text-align:center">Linux</td><td style="text-align:center"><a href="https://galliumos.org/" target="_blank" rel="external">GalliumOS</a></td><td style="text-align:center">GalliumOS是一个快速而且轻量级的Linux 发行版，主要用于ChromeOS设备。GalliumOS基于Xubuntu构建，提供轻量级而且功能完整的操作桌面。它集成了 ChromeOS鼠标驱动，提供类似 ChromeOS的触控操作体验。</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Linux</td><td style="text-align:center"><a href="http://lubuntu.net/" target="_blank" rel="external">Lubuntu</a></td><td style="text-align:center">Lubuntu是新的Ubuntu Linux桌面系统计划,其默认桌面环境为LXDE,特别适用于配备老旧的电脑。</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Linux</td><td style="text-align:center"><a href="http://xubuntu.org/" target="_blank" rel="external">Xubuntu</a></td><td style="text-align:center">Xubuntu是一个Ubuntu Linux的官方派生版，它基于桌面环境Xfce。</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Linux</td><td style="text-align:center"><a href="http://kubuntu.org/" target="_blank" rel="external">Kubuntu</a></td><td style="text-align:center">Kubuntu是基于Ubuntu的Linux发行版。Kubuntu在Ubuntu的基础上将默认的unity桌面套件替换为KDE套件，包含了精致、美观而实用的Plasma工作空间和一系列经过细心选择而且具实用价值的KDE程序。</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Linux</td><td style="text-align:center"><a href="http://edubuntu.org/" target="_blank" rel="external">Edubuntu</a></td><td style="text-align:center">Edubuntu 是一个由Ubuntu正规支持，通过定制的用于教育的派生版本。</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Linux</td><td style="text-align:center"><a href="https://ubuntu.com/" target="_blank" rel="external">Ubuntu</a></td><td style="text-align:center">标准且完整的Ubuntu发行版。</td></tr><tr><td style="text-align:center">✅</td><td style="text-align:center">Linux</td><td style="text-align:center"><a href="https://fedoraproject.org/" target="_blank" rel="external">Fedora</a></td><td style="text-align:center">20161121最新版！</td></tr><tr><td style="text-align:center">❌</td><td style="text-align:center">FreeBSD</td><td style="text-align:center"></td><td style="text-align:center">项目加紧开发中！</td></tr></tbody></table><h3><span id="建议"><span id="recommendations">建议</span></span></h3><blockquote><p>Chromebooks平台是轻量级操作系统和桌面环境，他们是时常更新内核驱动程序来支持他们全新和紧密集成的硬件。</p></blockquote><ul><li><strong>GalliumOS</strong>是专为Chromebook而优化。它的能力以及所有的指标看上去很不错，并能非常迅速的安装。一些比较占用内存的应用（例如Steam游戏）得益于GalliumOS的精心优化表现极佳。 <strong>chrx</strong>默认安装GalliumOS。</li><li><strong>Lubuntu</strong>成绩和表现良好。它采用了比其他发行版显著较少的内存。</li><li><strong>Xubuntu</strong>是另一个不错的选择。这是一个较Lubuntu相对较重的操作系统，但是仍然有很好的表现。</li><li><strong>Fedora</strong>为自定义版本“Spins”（桌面环境，选择-e ENVIRONMENT），其中（lxde）是轻量级的桌面环境，默认桌面环境（gnome）相对更“重”。下图为自定义版本测试安装时间。</li><li>不太推荐您选择标准完整的Ubuntu在Chromebook上。下图数据并不反应桌面应用使用情况。受限于硬件，操作系统的性能未必能全部体现。若您的内存在4G左右情况或许能好一些，但并不绝对。</li></ul><h3><span id="安装测试注意国内情况或有不同">安装测试（注意！国内情况或有不同）</span></h3><table><thead><tr><th style="text-align:center">发行版本<sup>1</sup></th><th style="text-align:center">占用空间<sup>2</sup></th><th style="text-align:center">占用内存<sup>3</sup></th><th style="text-align:center">安装时间<sup>4</sup></th><th style="text-align:center">是否推荐</th></tr></thead><tbody><tr><td style="text-align:center">GalliumOS 2.0</td><td style="text-align:center">2.5GB</td><td style="text-align:center">291MB</td><td style="text-align:center">9 分钟</td><td style="text-align:center">✅</td></tr><tr><td style="text-align:center">GalliumOS 1.0</td><td style="text-align:center">2.8GB</td><td style="text-align:center">287MB</td><td style="text-align:center">10分钟</td><td style="text-align:center">✅</td></tr><tr><td style="text-align:center">Lubuntu 15.10</td><td style="text-align:center">2.7GB</td><td style="text-align:center">227MB</td><td style="text-align:center">18分钟</td><td style="text-align:center">✅</td></tr><tr><td style="text-align:center">Lubuntu 16.04</td><td style="text-align:center">3.1GB</td><td style="text-align:center">185MB</td><td style="text-align:center">19分钟</td><td style="text-align:center">✅</td></tr><tr><td style="text-align:center">Xubuntu 15.04</td><td style="text-align:center">3.0GB</td><td style="text-align:center">360MB</td><td style="text-align:center">22分钟</td><td style="text-align:center">✅</td></tr><tr><td style="text-align:center">Ubuntu 15.04</td><td style="text-align:center">3.5GB</td><td style="text-align:center">440MB</td><td style="text-align:center">28分钟</td><td style="text-align:center">❌</td></tr><tr><td style="text-align:center">Kubuntu 15.10</td><td style="text-align:center">4.2GB</td><td style="text-align:center">613MB</td><td style="text-align:center"></td><td style="text-align:center">❌</td></tr><tr><td style="text-align:center">Fedora 24 (lxde)</td><td style="text-align:center">2.9GB</td><td style="text-align:center">182MB</td><td style="text-align:center">20分钟</td><td style="text-align:center">✅</td></tr><tr><td style="text-align:center">Fedora 24    (cinnamon)</td><td style="text-align:center">3.8GB</td><td style="text-align:center">384MB</td><td style="text-align:center">27分钟</td><td style="text-align:center">✅</td></tr><tr><td style="text-align:center">Fedora 24</td><td style="text-align:center">4.5GB</td><td style="text-align:center">647MB</td><td style="text-align:center">27分钟</td><td style="text-align:center">❌</td></tr></tbody></table><p>1.全部桌面环境见 <code>desktop</code> 环境选项；<br>2.可以通过删除不需要的包可以减少磁盘空间。显示的数字反映了默认安装的桌面环境；<br>3.RAM登录图形界面，连接上无线网络后，您可用通过运行终端命令 <code>/usr/bin/free</code> 查看；<br>4.各操作系统的安装时间会有很大程度的不同，这取决于您的互联网连接。当然，上图数据可作为您的参考。</p><h3><span id="检验程序">检验程序</span></h3><blockquote><p><strong>工作中</strong>可被定义为：</p></blockquote><ul><li>系统启动迅捷</li><li>安装残余被清理</li><li>启用交换空间和压缩内存</li><li>正确的驱动程序加载</li><li>触摸板工作</li><li>触控板的设置是可用</li><li>音频工作，包括 睡眠/唤醒 后</li><li>无线网络，包括 睡眠/唤醒 后</li><li>用于背光的功能键的功能</li><li>功能键音量控制功能</li><li>麦克风输入工作</li><li>摄像头输入工作</li><li>当笔记本电脑关闭时电源管理系统</li><li>打开笔记本电脑时的电源管理唤醒系统</li><li>没有用户配置所需的基本使用</li></ul><blockquote><p>这份列表可能会有所改变。若您能就此想我们提出宝贵的意见我们将非常欢迎！</p></blockquote><h3><span id="演进">演进</span></h3><p><strong>chrx之前</strong></p><blockquote><p>chrx开始作为<a href="http://chromeos-cr48.blogspot.fr/2013/10/chrubuntu-for-new-chromebooks-now-with.html" target="_blank" rel="external">ChrUbuntu</a>的更新和增强版本，并且仍然保留了一些原有ChrUbuntu代码（尤其是磁盘分区位）。</p></blockquote><p><strong>目前的chrx</strong></p><blockquote><p>chrx已在数千台Chromebook安装上为用户安装Linux。用户讨论可以在<a href="https://www.reddit.com/r/chrubuntu" target="_blank" rel="external">/r/chrubuntu</a>中找到。</p></blockquote><p><strong>chrx将来</strong></p><blockquote><p>我想在一个更广泛的硬件测试和安装其他Linux发行版。对于FreeBSD支持即将到来。如果您不能等待见<a href="http://blog.grem.de/pages/c720.html" target="_blank" rel="external">这里</a>。</p></blockquote><h3><span id="备选方案">备选方案</span></h3><blockquote><p>chrx是一个命令行安装程序，它不需要任何物理媒体或其他准备安装。它可以允许您双启动，这样您便可在Chromebook开机时选择启动Linux或ChromeOS。这是一个灵活的设置，非常适合许多用户，但当然不是所有的。</p></blockquote><p>可以考虑如下替代方案：</p><ul><li>休·格林伯格的<a href="https://www.distroshare.com/" target="_blank" rel="external">Distroshare</a>已经很好地更新ISO文件（为Ubuntu和许多其他Linux发行版！），它可以从USB / SD闪存内存安装。这种方法完全从您的Chromebook中删除Chrome操作系统，并致力于将Linux安装到您的固态硬盘。<ul><li>参见约翰·刘易斯的<a href="https://johnlewis.ie/custom-chromebook-firmware/rom-download/" target="_blank" rel="external">备用固件</a>选项不支持SeaBIOS旧式引导与固件的Chromebook。</li></ul></li><li><a href="https://github.com/dnschneid/crouton" target="_blank" rel="external">Crouton</a>可以让您同时运行Chrome操作系统和Linux，而不是像chrx或ChrUbuntu双启动。这样的安排有一些缺点，但如果您花在Chrome OS及您的Linux需要的时间是有限的，它应该更好地服务。</li><li>原始<a href="http://chromeos-cr48.blogspot.fr/2013/10/chrubuntu-for-new-chromebooks-now-with.html" target="_blank" rel="external">ChrUbuntu</a>已在各种各样的硬件进行了测试。不幸的是，现在是显著过时了，无法安装Ubuntu 15.04和更新的版本。 14.10与之前的版本应通过ChrUbuntu安装成功，但他们将需要额外的配置工作。如果您的Chromebook是老旧设备或不支持 <strong>chrx</strong> ，ChrUbuntu或可一试。</li></ul><h3><span id="对安全和隐私的注意事项">对安全和隐私的注意事项</span></h3><blockquote><p>从网络运行的代码始终是一个需要认真思考的行为。 chrx可以直接从网络上运行，并默认将通过相同的机制下载额外的代码。通过从不安全的网络（例如公共Wi-Fi）下载代码可能会产生不好的影响。<br>如果这些是您所关注的，你可以通过审计所涉及的所有代码，比较下载的软件包的校验和承载本地缓存从而降低您所承担的风险（参见<a href="#advanced_usage">高级用法</a>）。<br>此外，在每一个chrx“pings home”安装报告成功或失败。这个ping不包含个人信息，只可能是调查故障有用的数据。<br>登录这些pings创建的条目是这样的：</p></blockquote><pre><code>17.x.x.x - - [01/May/2016:07:37:00 +0000] &quot;GET /end_ok HTTP/1.1&quot; 200 0 &quot;-&quot;&quot;chrx/2.2.3 hw=PEPPY_C6A-V7C-A2C sw=linux,galliumos-desktop,latest,2.0,amd64&quot; &quot;-&quot;</code></pre><p><code>hw</code> 是对应于您的Chromebook机型硬件ID（<strong>不是</strong>序列号）。<br><code>sw</code> 结合了一些你用来运行 <strong>chrx</strong> 命令行设置（或默认）。<br>如果这种级别的信息共享是您所不愿意的，可用 <code>-n</code> 禁用。</p><h3><span id="强迫症">强迫症</span></h3><blockquote><p>chrx的发音是“棉花糖”。</p></blockquote><h3><span id="鸣谢">鸣谢</span></h3><blockquote><p>致敬贡献<a href="http://chromeos-cr48.blogspot.fr/2013/10/chrubuntu-for-new-chromebooks-now-with.html" target="_blank" rel="external">Chrubuntu</a>的Jay Lee与<a href="https://www.reddit.com/r/chrubuntu" target="_blank" rel="external">/r/chrubuntu</a>中提供大量有用资源链接的人士。</p></blockquote><h3><span id="更新日志"><span id="changelog">更新日志</span></span></h3><ul><li><strong>1.0</strong>（20141223）</li><li><strong>1.1</strong>（20150504）：添加对Ubuntu 15.04的支持<ul><li><strong>1.1.1</strong>（20150508）：添加“-r RELEASE”选项；验证某些输入</li><li><strong>1.1.2</strong>（20151005）：更新Ubuntu的“trusty”到14.04.3；添加认证设备硬件型号（PEPTO，LINK，SAMUS，LEON，PAINE，YUNA，SPRING，SKATE，FALCO，WOLF）；始终确保chrx.org证书</li></ul></li><li><strong>2.0</strong>（20151025）：添加GalliumOS支持；增加对Ubuntu 15.10的支持；增加检测和安装所有已知的Chrome操作系统设备；加上“-d DISTRIBUTION”和“-e ENVIRONMENT”选项；删除“-m METAPACKAGE”选项；删除“-i IMAGE”选项，使RELEASE更智能；变通systemd冲突；重构代码到功能，方便多种发行版本和未来的操作系统。<ul><li><strong>2.0.1</strong>（20151113）：对于GalliumOS更新内核映像路径</li><li><strong>2.0.2</strong>（20151118）：更新一些硬件型号</li><li><strong>2.0.3</strong>（20151119）：修正：发行# 4，从ChromeOS中分离partprobe</li><li><strong>2.0.4</strong>（20151120）：修正：发行#5，“-r RELEASE”处理失败发布的一些RELEASE值</li><li><strong>2.0.5</strong>（20151212）：第一个用户添加到重要群体;使用GalliumOS通用coreimage</li><li><strong>2.0.6</strong>（20151214）：修正：#发行7，添加GalliumOS hwspecific入门</li><li><strong>2.0.7</strong>（20151214）：所有已知的电脑操作系统设备的更新检测；改善预后的描述</li><li><strong>2.0.8</strong>（20160102）：添加CHRX_NO_REBOOT 环境变量通过<a href="https://github.com/MattDevo/scripts使用" target="_blank" rel="external">https://github.com/MattDevo/scripts使用</a></li></ul></li><li><strong>2.1</strong>（20160103）：添加“- P PACKAGE”选项来安装额外的软件包<ul><li><strong>2.1.1</strong>（20160120）：更新GalliumOS coreimage的URL;确保UTIL添加PKGS</li><li><strong>2.1.2</strong>（20160130）：添加为解析“-r nightly”（仅GalliumOS，安装每日构建）;日志调试chrx命令行;第一个用户添加到组更便捷</li></ul></li><li><strong>2.2</strong>（20160304）：默认分配GalliumOS<ul><li><strong>2.2.1</strong>（20160316）：修正：发行＃12，错误安装到外部媒体</li><li><strong>2.2.2</strong>（20160420）：重试/恢复失败的映像下载;添加新硬件型号</li><li><strong>2.2.3</strong>（20160426）：不降重启前壳;不重试coreimage下载;更新蒸汽安装xenial;为Ubuntu 16.04的更新文档</li><li><strong>2.2.4</strong>（20160505）：添加谷歌Chrome浏览器安装包;添加新硬件型号，更新其它</li><li><strong>2.2.5</strong>（20160512）：更新Ubuntu的基础/内核镜像URL（感谢arsfeld）</li><li><strong>2.2.6</strong>（20160619）：隐藏分区的eMMC正确（感谢gmykhailiuta）;提高-r发布处理的GalliumOS;添加初步的处理对于因非运行的ChromeOS</li><li><strong>2.2.7</strong>（20160810）：使用不同版本的不同Ubuntu的URL，以匹配新的规范办法;更新Ubuntu的“trusty”，至14.04.5</li><li><strong>2.2.8</strong>（20161002）：添加新GalliumOS硬件特定PKGS支持：布拉斯韦尔，SKYLAKE微架构，SAMUS</li></ul></li><li><strong>2.3</strong>（20161121）：增加对Fedora的支持，感谢@jedigo!<ul><li><strong>2.3.1</strong>（20161208）：Fedora:增加<code>-p</code>选项，增加最新版本自动检测，增加非自由代码(thx@jedigo)；GalliumOS:使用chrx GRUB配置；all:新增更多隐藏mmcblk0分区；升级GRUB配置</li><li><strong>2.3.2</strong>（20161222）：添加用户组分别在选择的distro/metapackage/spin并不包括所有（修复# 30）</li></ul></li><li><strong>2.4</strong>（20161228）：增加对镜像站点选择的支持(仅GalliumnOS)<ul><li><strong>2.4.1</strong>（20170129）：GalliumOS：修正<code>LINK</code>，新增<code>CHELL HiDPI pkg</code>选项</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本方法通过Linux的&lt;a href=&quot;http://www.ibm.com/developerworks/cn/linux/l-cn-chroot/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Chroot机制&lt;/a&gt;实现在C
      
    
    </summary>
    
    
      <category term="Chrx" scheme="http://yoursite.com/tags/Chrx/"/>
    
      <category term="Chromebook" scheme="http://yoursite.com/tags/Chromebook/"/>
    
      <category term="双系统" scheme="http://yoursite.com/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>lubuntu+GitHub Pages搭建hexo博客</title>
    <link href="http://yoursite.com/2016/10/23/lubuntu-GitHub-Pages%E6%90%AD%E5%BB%BAhexo%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/10/23/lubuntu-GitHub-Pages搭建hexo博客/</id>
    <published>2016-10-23T16:07:36.000Z</published>
    <updated>2017-09-28T10:33:20.479Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Hexo 是一个快速、简洁且高效的博客框架，使用 Markdown 解析文章。以下操作在Ubuntu及其衍生版本内执行基本有效。</p></blockquote><h2><span id="前期准备">前期准备</span></h2><p><em>安装 Git</em></p><pre><code>$ sudo apt-get install git-core</code></pre><p><em>安装 Node.js</em></p><pre><code>$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh</code></pre><p><em>安装完成后，重启终端并执行下列命令即可安装 Node.js。</em></p><pre><code>$ nvm install stable</code></pre><h2><span id="安装-hexo">安装 Hexo</span></h2><pre><code>$ npm install -g hexo-cli$ hexo init &lt;folder&gt;$ cd &lt;folder&gt;$ npm install</code></pre><h2><span id="后续">后续</span></h2><blockquote><p>1.建议更新系统及软件后再执行操作。</p><p>2.请注意安装目录的权限，建议sudo su后执行相应命令。</p><p>3.关于”ERROR Deployer not found: git”解决方案请参看<a href="http://www.jianshu.com/p/5e0ca2b14815" target="_blank" rel="external">这里</a>。</p><p>4.安装 Hexo 后有关主题安装与配置请参看<a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">这里</a>。</p><p>5.Hexo + GitHub Pages 配置过程请参看<a href="http://www.jianshu.com/p/973e718e3096" target="_blank" rel="external">这里</a>。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架，使用 Markdown 解析文章。以下操作在Ubuntu及其衍生版本内执行基本有效。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;&lt;span id=&quot;前期准备&quot;&gt;前期准备&lt;/span&gt;&lt;/h2&gt;&lt;p&gt;&lt;e
      
    
    </summary>
    
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
      <category term="GitHub Pages" scheme="http://yoursite.com/tags/GitHub-Pages/"/>
    
      <category term="lubuntu" scheme="http://yoursite.com/tags/lubuntu/"/>
    
  </entry>
  
</feed>
